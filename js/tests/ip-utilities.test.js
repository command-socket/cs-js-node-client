"use strict";var __awaiter=this&&this.__awaiter||function(t,e,i,n){return new(i||(i=Promise))((function(o,r){function l(t){try{u(n.next(t))}catch(t){r(t)}}function c(t){try{u(n.throw(t))}catch(t){r(t)}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(l,c)}u((n=n.apply(t,e||[])).next())}))},__importStar=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i in t)Object.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e.default=t,e};Object.defineProperty(exports,"__esModule",{value:!0});const IPUtilities=__importStar(require("../ip-utilities"));require("promise-any-polyfill");const ACTUAL_IP="47.6.34.113";test("#getPublicIP returns correct public IP.",()=>__awaiter(void 0,void 0,void 0,(function*(){let t=yield IPUtilities.getPublicIP();expect(t).toBe(ACTUAL_IP)}))),test.only("#getPublicIP only uses the network once.",()=>__awaiter(void 0,void 0,void 0,(function*(){let t=jest.spyOn(Promise,"any"),e=yield IPUtilities.getPublicIP(),i=yield IPUtilities.getPublicIP();expect(e).toBe(ACTUAL_IP),expect(i).toBe(ACTUAL_IP),expect(t).toHaveBeenCalledTimes(1)})));
//# sourceMappingURL=ip-utilities.test.js.map
