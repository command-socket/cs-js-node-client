{"version":3,"sources":["../ts/command-socket-node-client.ts"],"names":["core_1","require","node_websocket_1","CommandSocketNodeClient","CommandSocket","[object Object]","urlOrWebSocket","commandRegistry","CommandRegistry","super","NodeWebSocket","exports"],"mappings":"oEAOA,MAAAA,OAAAC,QAAA,wBAMAC,iBAAAD,QAAA,oBASA,MAAaE,gCAEmCH,OAAAI,cAI/CC,YAAmBC,EACZC,EAAwD,IAAIP,OAAAQ,iBAElEC,MAAM,IAAIP,iBAAAQ,cAAcJ,GAAwBC,IATlDI,QAAAR,wBAAAA","file":"command-socket-node-client.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t11:35 PM -- November 23rd, 2019.\n *\tProject: @command-socket/node-client\n */\n\nimport WebSocket from \"ws\";\nimport {\n\tCommandSocket,\n\tCommandSetStructure,\n\tCommandRegistry,\n\tFullCommandSet\n} from \"@command-socket/core\";\nimport { NodeWebSocket } from \"./node-websocket\";\n\n/**\n * A browser-specific implementation of a CommandSocket.\n *\n * @author Trevor Sears <trevorsears.main@gmail.com>\n * @version v0.1.0\n * @since v0.1.0\n */\nexport class CommandSocketNodeClient<\n\tLCS extends CommandSetStructure = any,\n\tRCS extends CommandSetStructure = any> extends CommandSocket<LCS, RCS> {\n\t\n\tpublic constructor(url: string, commandRegistry?: CommandRegistry<FullCommandSet<LCS>>);\n\tpublic constructor(websocket: WebSocket, commandRegistry?: CommandRegistry<FullCommandSet<LCS>>);\n\tpublic constructor(urlOrWebSocket: string | WebSocket,\n\t\t\t\t\t   commandRegistry: CommandRegistry<FullCommandSet<LCS>> = new CommandRegistry<FullCommandSet<LCS>>()) {\n\t\t\n\t\tsuper(new NodeWebSocket(urlOrWebSocket as any), commandRegistry);\n\t\t\n\t}\n\t\n}"]}