"use strict";var __awaiter=this&&this.__awaiter||function(e,t,s,i){return new(s||(s=Promise))((function(o,n){function r(e){try{a(i.next(e))}catch(e){n(e)}}function c(e){try{a(i.throw(e))}catch(e){n(e)}}function a(e){var t;e.done?o(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,c)}a((i=i.apply(e,t||[])).next())}))},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t};Object.defineProperty(exports,"__esModule",{value:!0});const ws_1=__importDefault(require("ws")),core_1=require("@command-socket/core"),IPUtilities=__importStar(require("./ip-utilities"));class NodeWebSocket{constructor(e){this.websocket="string"==typeof e?new ws_1.default(e):e,this.events=new core_1.SocketEvents,this.websocket.addEventListener("open",()=>{this.events.OPEN.notify({source:this})}),this.websocket.addEventListener("message",e=>{this.events.MESSAGE.notify({source:this,data:e.data})}),this.websocket.addEventListener("close",e=>{this.events.CLOSE.notify({source:this,code:e.code,reason:e.reason})})}send(e){this.websocket.send(e)}close(e,t){this.websocket.close(e,t)}getIP(){return __awaiter(this,void 0,void 0,(function*(){return yield IPUtilities.getPublicIP()}))}getEvents(){return this.events}}exports.NodeWebSocket=NodeWebSocket;
//# sourceMappingURL=node-websocket.js.map
